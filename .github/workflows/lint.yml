name: Lint

on:
  push:
    branches: [ "main" ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ "main" ]
  schedule:
    - cron: '45 15 * * 4'
env:
  CACHE_PATH: ./*
  CACHE_KEY: lint-cache-${{ github.sha }}
permissions:
  contents: read
  security-events: write
  actions: write  # This is needed for pull requests to delete 

jobs:
  setup:
   
    name: Setup ðŸ›«
    strategy:
      matrix:
        node-version: [16, 18]  
    runs-on: ubuntu-latest
    steps:
      - name: Setup Cache
        uses: actions/cache@v3
        with:
          path: ${{ env.CACHE_PATH }}
          key: ${{ env.CACHE_KEY }}-${{ matrix.node-version }}
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install Yarn/ Node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
      - name: Install Dependencies
        run: yarn install --immutable
        # this is needed to generate things like tsconfig declerations
      - name: Prepare Nuxt
        run: yarn prepare:ci
  teardown:
    name: Teardown ðŸ›¬
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16, 18]  
    needs:
      # list of lint jobs
      - eslint 
    if: always()
    env:
      LINT_RESULTS: ${{ toJson(needs) }}
    steps:
      - name: Check Lint Status
        if: always()
        run: |
          # failure if one or more lint jobs exit without "success"/"skipped" status
          if echo "$LINT_RESULTS" | jq -r '.[].result' | grep -v 'success' | grep -q -v 'skipped'; then
            echo "lint failure"
            exit 1
          fi
          exit 0



  # ESLint is a tool for identifying and reporting on patterns
  # found in ECMAScript/JavaScript code.
  # More details at https://github.com/eslint/eslint
  # and https://eslint.org
  eslint:
    name: ESLint âœ¨
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      matrix:
        node-version: [16, 18]  
    steps:
      - name: Load Cache
        uses: actions/cache@v3
        with:
          path: ${{ env.CACHE_PATH }}
          key: ${{ env.CACHE_KEY }}-${{ matrix.node-version }}
      - name: Run ESLint
        run: yarn lint:ci

      - name: Upload Results
        uses: github/codeql-action/upload-sarif@v2
        if: always() # upload even if the lint fails
        with:
          sarif_file: eslint-results.sarif
          wait-for-processing: true
  # List future lints here only the linting command/uploads is needed
  #  see eslint job above