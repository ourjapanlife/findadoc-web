import type { GraphQLError, SourceLocation } from 'graphql'

export type ServerResponse<T> = {
    data: T | undefined
    hasErrors: boolean
    errors?: ServerError[]
}

export type ServerError = {
    message: string
    fieldWithError: readonly SourceLocation[] | undefined
    code: ErrorCode
}

export type ServerErrorResponse = {
    response: {
        errors: GraphQLError[]
    }
}

export enum ErrorCode {
    SERVER_ERROR = 'SERVER_ERROR',
    NOT_FOUND = 'NOT_FOUND',
    REQUIRED = 'REQUIRED',
    MISSING_INPUT = 'MISSING_INPUT',
    NEGATIVE_NUMBER = 'NEGATIVE_NUMBER',
    INVALID_ID = 'INVALID_ID',
    INVALID_LENGTH_TOO_LONG = 'INVALID_LENGTH_NAME_TOO_LONG',
    MAX_LIMIT = 'MAX_LIMIT',
    MIN_LIMIT = 'MIN_LIMIT',
    INVALID_EMAIL = 'INVALID_EMAIL',
    INVALID_PHONE_NUMBER = 'INVALID_PHONE_NUMBER',
    INVALID_WEBSITE = 'INVALID_WEBSITE',
    SUBMISSION_ALREADY_APPROVED = 'SUBMISSION_ALREADY_APPROVED',
    CREATEPROFFESIONAL_FACILITYIDS_REQUIRED = 'CREATEPROFFESIONAL_FACILITYIDS_REQUIRED',
    UPDATEPROFFESIONAL_FACILITYIDS_REQUIRED = 'UPDATEPROFFESIONAL_FACILITYIDS_REQUIRED',
    INTERNAL_SERVER_ERROR = 'INTERNAL_SERVER_ERROR',
    CONTAINS_INVALID_CHARACTER = 'CONTAINS_INVALID_CHARACTER',
    CONTAINS_DUPLICATE_LOCAL = 'CONTAINS_DUPLICATE_LOCAL',
    CONTAINS_JAPANESE_CHARACTER = 'CONTAINS_JAPANESE_CHARACTER',
    CONTAINS_LATIN_CHARACTER = 'CONTAINS_LATIN_CHARACTER',
    ORDERBY_OPTION_INVALID = 'ORDERBY_OPTION_INVALID',
    ORDERBY_OPTION_NOT_FOUND = 'ORDERBY_OPTION_NOT_FOUND',
    ORDERBY_OPTION_MAX_LIMIT = 'ORDERBY_OPTION_MAX_LIMIT',
    ORDERBY_FIELD_SELECTED_TWICE = 'ORDERBY_FIELD_SELECTED_TWICE',
    INVALID_LANGUAGE_INPUT = 'INVALID_LANGUAGE_INPUT',
    INVALID_INPUT = 'INVALID_INPUT',
    BAD_USER_INPUT = 'BAD_USER_INPUT',
    UNAUTHENTICATED = 'UNAUTHENTICATED'
}
